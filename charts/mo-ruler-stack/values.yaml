# Default values for mo-ruler-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# secret value to create secret automatically
secretValue:
  # should be encoded with base64
  alertmanager_email_secret: cmVxdWlyZQo=
  auth_generic_oauth_secret:
    id: cmVxdWlyZQo=
    secret: cmVxdWlyZQo=
  instance_service_webhook_authorization: cmVxdWlyZQo=
 
  alertmanager: 
    # see: https://prometheus.io/docs/alerting/0.25/https
    # if setted, should change k8s livenessProbe and readinessProbe header
    alertmanager_web_auth_user: admin
    alertmanager_web_auth_password: admin
    # need to be bcrypted, in bash: htpasswd -bnBC 10 "" <alertmanager_web_auth_password> | tr -d ':\n'
    alertmanager_web_auth_password_bcrypted: $2y$10$Z3zgfm2IIeQqNmGWeqsrSecRuRmo/EAh4Srn0Mi0fG98dJZMn7RTS

# secretSeed config secret generation params
# echo env should config diff values
secretSeed:
  ## param for templates/grafana/grafana-admin-secret.yaml
  grafana: YXNkZl9wYXNzd29y

# swith for generate dashboards which defined in `grafana` folder
# cooperate with template templates/grafana/dashboards-configmap.yaml
dashboards:
  enabled: false

# swith for generate dashboards which defined in `rules` folder
# cooperate with template templates/rules-config.yaml
alertrules:
  enabled: false

defaultDatasource:
  # from matrixorigin/ops
  # cooperate with template templates/mo-ruler-datasource.yaml
  ruler: true
  # cooperate with template templates/alertmanager-datasource.yaml
  alertmanager: true

## alertmanager sub-chart configurable values
## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/alertmanager
##
## Configuration for alertmanager
## ref: https://prometheus.io/docs/alerting/alertmanager/
##
alertmanager:
  enabled: true
  extraArgs:
    # ha集群部署
    # web.config.file: /tmp/alertmanager-web-config/alertmanager-web-config.yaml
    # your grafana url e.g. http://mo-grafna-url
    web.external-url: null
    log.level: debug
  # 单节点部署
  replicaCount: 1
  
  # ha集群部署：修改副本数以及打开 web.config.file
  # replicaCount: 3
  
  livenessProbe:
    httpGet:
      path: /
      httpHeaders:
        - name: Authorization
          # echo -n "<alertmanager_web_auth_user>:<alertmanager_web_auth_password>" | base64
          # Basic xxxxx=
          value: Basic YWRtaW46YWRtaW4=
  
  readinessProbe: 
    httpGet:
      path: /
      httpHeaders:
        - name: Authorization
          # echo -n "<alertmanager_web_auth_user>:<alertmanager_web_auth_password>" | base64
          # Basic xxxxx=
          value: Basic YWRtaW46YWRtaW4=

  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "/metrics"
      prometheus.io/port: "9093"

  servicePerReplica:
    enabled: true
    type: ClusterIP
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "/metrics"
      prometheus.io/port: "9093"

  configmapReload:
    enabled: false

  fullnameOverride: "mo-ob-alertmanager"
  persistence:
    enabled: true
    storageClass: "alicloud-disk-essd"
    accessModes:
      - ReadWriteOnce
    # 阿里云部署时要调整为20G，因为其最小的PV只能说20G
    size: 20Gi
  # persistence:
  #   enabled: true
  #   ## Persistent Volume Storage Class
  #   ## If defined, storageClassName: <storageClass>
  #   ## If set to "-", storageClassName: "", which disables dynamic provisioning
  #   ## If undefined (the default) or set to null, no storageClassName spec is
  #   ## set, choosing the default provisioner.
  #   ##
  #   # storageClass: "-"
  #   accessModes:
  #     - ReadWriteOnce
  #   # size: 50Mi
  # 阿里云部署时要调整为20G，因为其最小的PV只能说20G
  #   size: 20Gi
  # alertmanagerSpec:
  #   image:
  #     registry: registry.cn-hangzhou.aliyuncs.com
  #     repository: alertmanager
  #     tag: v0.25.0
  #     sha: ""
  config:
    global:
      resolve_timeout: 5m
      smtp_from: "it@matrixorigin.cn"
      smtp_hello: "smtp.exmail.qq.com:465"
      smtp_smarthost: "smtp.exmail.qq.com:465"
      smtp_auth_username: "it@matrixorigin.cn"
      smtp_auth_password_file: "/tmp/alertmanager-email-smtp/smtp-authorization"
      smtp_require_tls: false
    route:
      group_by: ["alertname"] # 分组标签
      group_wait: 10s # 告警等待时间。告警产生后等待10s，如果有同组告警一起发出
      group_interval: 10s # 两组告警的间隔时间
      repeat_interval: 1d # 重复告警的间隔时间，可减少相同邮件的发送频率
      receiver: "null"
      # routes:
    receivers:
      - name: email-receiver
        email_configs:
          - to: "moc-warning@matrixone.cloud"
          # send_resolved: true
      - name: "null"
      - name: 'wecom-group'
        webhook_configs:
        - url: "http://alertmanager-webhook-adapter/webhook/send?channel_type=weixin&token=<token>"
      - name: notify-user
        webhook_configs:
          - url: http://mailservice.mo-cloud:8020/alerts
            http_config:
              authorization:
                type: "Bearer"
                credentials_file: /tmp/instance-service-webhook-authorization/instance-service
  extraSecretMounts:
    # kubectl -n mo-ob create secret generic instance-service-webhook-authorization --from-literal=instance-service=[your-authorization]
    # 请注意，为了保证CI运行，这里的name请和secret的keyname一致
    - name: instance-service                                # 这里的name请和secret的keyname一致
      mountPath: /tmp/instance-service-webhook-authorization
      subPath: ""
      secretName: instance-service-webhook-authorization
      readOnly: true
    # kubectl -n mo-ob create secret generic alertmanager-email-secret --from-literal=smtp-authorization=[your-smtp-password]
    - name: smtp-authorization
      mountPath: /tmp/alertmanager-email-smtp
      subPath: ""
      secretName: alertmanager-email-secret
      readOnly: true
    - name: web-config
      mountPath: /tmp/alertmanager-web-config
      subPath: ""
      secretName: alertmanager-web-config
      readOnly: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 32Mi

## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
## details in https://github.com/grafana/helm-charts/blob/main/charts/grafana/README.md
##
grafana:
  replicas: 1
  enabled: true
    # static passwd
    #adminUser: admin
    #adminPassword: admin
  admin:
    ## Name of the secret. Can be templated.
    existingSecret: "grafana-admin-secret"
    userKey: admin-user
    passwordKey: admin-password
  # for grafana.ini
  extraSecretMounts:
    - name: auth-generic-oauth-secret-mount
      secretName: auth-generic-oauth-secret
      defaultMode: 0440
      mountPath: /etc/secrets/auth_generic_oauth
      readOnly: true
  grafana.ini:
    auth.generic_oauth:
      name: dex
      enabled: true
      scopes: openid profile email offline_access
      auth_url: https://oidc.matrixorigin.cn:31443/dex/auth
      token_url: https://oidc.matrixorigin.cn:31443/dex/token
      api_url: https://oidc.matrixorigin.cn:31443/dex/userinfo
      allow_sign_up: true
      client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
      client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
    dataproxy:
      logging: false
      # this timeout should greater than loki's http server read/write timeout
      timeout : 300
      dialTimeout: 10
      keep_alive_seconds: 150
  service:
    enabled: true
    type: LoadBalancer
    port: 80
    targetPort: 3000
    # targetPort: 4181 To be used with a proxy extraContainer
    ## Service annotations. Can be templated.
    # aws需要添加该annotation，以启用暴露在公网的LoadBalancer
    annotations: {
      service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    }
    labels: {}
    portName: service
    # Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: "http" or "tcp"
    appProtocol: ""
  sidecar:
    dashboards:
      enabled: true
    datasources:
      enabled: true
      searchNamespace: ALL


moRuler:
  replicaCount: 1
  enabled: false
  image:
    containerName: mo-ruler
    repository: matrixorigin/observability
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ruler-0.9.0-alpha.2

  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 200Mi

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 9199
    targetPort: 9199

  apiServer:
    port: 9199

  extraSecretMounts:
    #- name: mo-secret-mount
    #  secretName: mo-ob-secret
    #  mountPath: /etc/secrets/mo-secret
    #  readOnly: true
    #  defaultMode: 0440

  rulerSpec:
    # cooperate with mo.type = env & extraSecretMounts
    secret: mo-ob-secret

    global:
      evaluation_interval: 30s

    rule_files:
      - "/rules/*.yaml"
      - "/rules/*.yml"

    alerting:
      alertingEndpoint:
        scheme: http
        targets:
          - "mo-ruler-stack-alertmanager:9093"

    log:
      level: debug
      format: console
      filename:
      maxSize:
      maxDays:
      maxBackups:
    ruler:
      rule:
        ruleType: metric
        notificationQueueCapacity: 10000
        outageTolerance: 1h
        forGracePeriod: 10m
        resendDelay: 1m
        metricConfigPath: /ruler-prometheus.yml
      mo:
        type: cfg
        labels:
          matrixone.cloud/role: observability
        host: 127.0.0.1
        port: 6001
        user: dump
        password: 111
        connectTimeout: 5s
        maxOpens: 5
        maxIdles: -1
        initPingCnt: 10
      query:
        maxQueryTimeout: 2m
        subQueryStepInterval: 1m
        lookBackDelta: 5m
        maxSamples: 50000000
        maxPointsPerTs: 11000
        database: mysql
        account: sys
      apiServer:
        lookBackDelta: 5m
        listenAddress: 0.0.0.0:9199
        readTimeout: 5m
        maxConnections: 512
        routePrefix: /
        consoleTemplatesPath: consoles
        consoleLibrariesPath: console_libraries
        enableLifecycle: false
        pageTitle: MO-Ruler Server
        appName: MO-Ruler

# webhook adapter for alertmanger to send alert to wecom
alertmanagerWebhookAdapter:
  enabled: true
  image:
    repository: ez4bruce3280/alertmanager-webhook-adapter
    tag: v1.1.7
  nodeSelector: {}
  tolerations: []
  affinity: {}
