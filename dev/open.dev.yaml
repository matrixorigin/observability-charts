
promtail:
  enabled: true

loki:
  enabled: true
  tableManager:
    enabled: true
    # retention related issue: https://github.com/matrixone-cloud/observability/issues/86
    retention_deletes_enabled: true
    retention_period: 720h
  loki:
    # -- Defines what kind of object stores the configuration, a ConfigMap or a Secret.
    # In order to move sensitive information (such as credentials) from the ConfigMap/Secret to a more secure location (e.g. vault), it is possible to use [environment variables in the configuration](https://grafana.com/docs/loki/latest/configuration/#use-environment-variables-in-the-configuration).
    # Such environment variables can be then stored in a separate Secret and injected via the global.extraEnvFrom value. For details about environment injection from a Secret please see [Secrets](https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables).
    configStorageType: ConfigMap
    # Should authentication be enabled
    auth_enabled: false
    # -- Check https://grafana.com/docs/loki/latest/configuration/#server for more info on the server configuration.
    server:
    # these timeout should smaller than grafana's dataproxy timeout
      http_server_read_timeout: 300s
      http_server_write_timeout: 300s
    # -- Limits config
    limits_config:
      #enforce_metric_name: false ### removed in loki 3.0.0
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      max_label_names_per_series: 30
    query_scheduler:
      max_outstanding_requests_per_tenant: 10000
    frontend:
      max_outstanding_per_tenant: 10000
    # -- Storage config. Providing this will automatically populate all necessary storage configs in the templated config.
    storage:
      bucketNames:
        # use same bucket
        chunks: test-bucket
        ruler: test-bucket
      type: s3
      s3:
        # s3: null
        # e.g. s3.us-west-2.amazonaws.com
        endpoint: null
        # e.g. us-west-2
        region: null
        secretAccessKey: null
        accessKeyId: null
        s3ForcePathStyle: false
        insecure: false
    # -- Check https://grafana.com/docs/loki/latest/configuration/#schema_config for more info on how to configure schemas
    schemaConfig: 
      configs:
      - from: 2024-04-01
        object_store: s3
        store: tsdb
        schema: v13
        index:
          prefix: index_
          period: 24h
    # -- Check https://grafana.com/docs/loki/latest/configuration/#ruler for more info on configuring ruler
    rulerConfig: 
      evaluation_interval: 1m
      poll_interval: 1m
      storage: 
        type: local
        local: 
          directory: /rules
      alertmanager_url: http://mo-ob-alertmanager.mo-ob:9093

  sidecar:
    rules:
      label: loki_rule
      labelValue: "true"
      folder: /rules/fake
      searchNamespace: ALL
  
  write:
    # -- Number of replicas for the write
    replicas: 2
    persistence:
      volumeClaimsEnabled: false
      enableStatefulSetAutoDeletePVC: true
      size: 10Gi
      storageClass: standard
    resources: 
      requests:
        memory: "1Gi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "250m"

  read:
    replicas: 1
    persistence:
      volumeClaimsEnabled: false
      enableStatefulSetAutoDeletePVC: true
      size: 10Gi
      storageClass: standard
    resources: 
      requests:
        memory: "1Gi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "250m"

  backend:
    replicas: 1
    persistence:
      volumeClaimsEnabled: false
      enableStatefulSetAutoDeletePVC: true
      size: 10Gi
      storageClass: standard
    resources: 
      requests:
        memory: "1Gi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "250m"

  # Configuration for the gateway
  gateway:
    enabled: true
    replicas: 1
    resources: 
      requests:
        memory: "250Mi"
        cpu: "250m"
      limits:
        memory: "250Mi"
        cpu: "250m"


kube-prometheus-stack:


  

    # prometheusConfigReloader:
    #   image:
    #     registry: registry.cn-hangzhou.aliyuncs.com/ack-cos
    #     repository: prometheus-config-reloader
    #     tag: ""

  prometheus:
    prometheusSpec:
      resources:
        limits:
          cpu: 1000m
          memory: "1Gi"
        requests:
          cpu: 1000m
          memory: "1Gi"
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: "standard"
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
      additionalScrapeConfigs: 
        # 过渡方案：在相关组件添加完成 annotation 后会被删除
        - job_name: "mocloud-application"
          honor_labels: true
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - action: keep
              regex: "mo-cloud|cos"
              source_labels:
              - __meta_kubernetes_namespace
            - action: drop
              source_labels: [__meta_kubernetes_pod_name, __meta_kubernetes_pod]
              regex: frps
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod
        - job_name: 'kubernetes-service-endpoints'
          honor_labels: true
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
              action: drop
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: (.+?)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
              replacement: __param_$1
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: service
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod

        - job_name: 'kubernetes-service-endpoints-slow'
          honor_labels: true
          scrape_interval: 5m
          scrape_timeout: 30s
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: (.+?)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
              replacement: __param_$1
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: service
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod

        - job_name: "moob-application"
          honor_labels: true
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - action: keep
              regex: "mo-ob"
              source_labels:
              - __meta_kubernetes_namespace
            - source_labels:
              - __meta_kubernetes_endpoints_label_need_metrics
              action: keep
              regex: true
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - action: labelmap
              regex: __meta_kubernetes_endpoints_label_(.+)
            - action: replace
              source_labels:
              - __meta_kubernetes_namespace
              target_label: namespace
            - action: replace
              source_labels:
              - __meta_kubernetes_service_name
              target_label: service
            - action: replace
              source_labels:
              - __meta_kubernetes_pod_node_name
              target_label: node
            - action: replace
              source_labels: [__meta_kubernetes_pod_name]
              target_label: pod
        - job_name: "matrixone-cn-pods"
          honor_labels: true
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_labelpresent_matrixorigin_io_component]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: "true"
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: (.+?)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod

      alertingEndpoints:
        - name: "mo-ob-alertmanager"
          # 如果跨ns，需要修改
          namespace: "mo-ob"
          port: 9093
          scheme: http
          pathPrefix: ""
          apiVersion: v2
          basicAuth:
            # secret define in mo-ruler-stack: alertmanager-auth-secret
            username: alertmanager-auth-secret
            password: alertmanager-auth-secret
